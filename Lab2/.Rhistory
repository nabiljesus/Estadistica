source('~/Documentos/script_est_descriptiva.R')
edad = c(2, 30, 23, 33, 28, 45, 34, 55, 67, 28, 35, 35, 36, 98)
sexo = c("F", "F", "M", "M","F", "M", "M","F", "F","F", "F","M","F", "M")
summary(edad)
var(edad)
sd(edad)
sort(edad)
length(edad)
par(mfrow=c(1, 2)) #para dibujar dos graficos en una misma p?gina: 1 fila y 2 columnas
?hist
hist(edad, main = "Histograma de edades",
hist(edad, main = "Histograma de edades",
xlab= "Edad", ylab = "Frecuencia", ylim= c(0, 10))
?
q
hist(edad, main = "Histograma de edades", xlab= "Edad", ylab = "Frecuencia", ylim= c(0, 10))
boxplot(edad, col= "orange", horizontal= F, xlab="Edad")
hist(edad,plot=F) #"Tabla de frecuencia"
dev.off() #para cerrar la ventana gr치fica
par(mfrow=c(1, 2)) #para dibujar dos graficos en una misma p?gina: 1 fila y 2 columnas
hist(edad, main = "Histograma de edades", xlab= "Edad", ylab = "Frecuencia", ylim= c(0, 10))
boxplot(edad, col= "orange", horizontal= F, xlab="Edad")
par(mfrow=c(1, 2)) #para dibujar dos graficos en una misma p?gina: 1 fila y 2 columnas
hist(edad, main = "Histograma de edades",
xlab= "Edad", ylab = "Frecuencia", ylim= c(0, 10))
boxplot(edad, col= "orange", horizontal= F, xlab="Edad")
hist(edad,plot=F) #"Tabla de frecuencia"
hist(edad, main = "Histograma de edades",
xlab= "Edad", ylab = "Frecuencia", ylim= c(0, 10))
dev.off() #para cerrar la ventana gr치fica
hist(edad,plot=F) #"Tabla de frecuencia"
s=factor(sexo)
class(s)
summary(s)
plot(s)
edad[sexo== "F"]
edad[edad>50]
edad[edad>30 & sexo=="M"]
sexo[edad<= 30 | edad >80]
boxplot(split(edad,sexo), ylab="Edad", col= c("pink","purple"))
source('~/Git/Estadistica/Lab2/lab2.R')
setwd("~/Git/Estadistica/Lab2")
(xpoi=rpois(1000,4.5))
library(stats4) ## Cargar la liberia stats4.
x=NULL
#FUNCIN DE VEROSIMILITUD
ll=function(lambda) {
n<-length(xpoi)
x<-xpoi
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda=2))
summary(est1)
#usando otra librer?a
library(MASS) ## loading package MASS
fitdistr(xpoi,"poisson")
datosColas = read.table("colas.txt")
datosColas = read.table("colas.txt")
datosColas = scan("colas.txt")
datosColas = scan("colas.txt")
datosColas
library(MASS) ## loading package MASS
fitdistr(datosColas,"poisson")
datosColas = scan("colas.txt")
#usando otra libreria
library(MASS) ## loading package MASS
l = fitdistr(datosColas,"poisson")
#########################################################################
#METODO DE MAXIMA VEROSIMILITUD MLE
#PARA EL CASO DE LA DIST. DE POISSON
library(stats4) ## Cargar la liberia stats4.
x=NULL
#FUNCION DE VEROSIMILITUD
ll=function(lambda) {
n<-length(datosColas)
x<-datosColas
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda= l))
summary(est1)
#Leyendo los datos
datosColas = scan("colas.txt")
datosColas = scan("colas.txt")
#usando otra libreria
library(MASS) ## loading package MASS
fitdistr(datosColas,"poisson")
#########################################################################
#METODO DE MAXIMA VEROSIMILITUD MLE
#PARA EL CASO DE LA DIST. DE POISSON
library(stats4) ## Cargar la liberia stats4.
x=NULL
#FUNCION DE VEROSIMILITUD
ll=function(lambda) {
n<-length(datosColas)
x<-datosColas
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda=2))
summary(est1)
datosColas = scan("colas.txt")
#usando otra libreria
library(MASS) ## loading package MASS
fitdistr(datosColas,"poisson")
#########################################################################
#METODO DE MAXIMA VEROSIMILITUD MLE
#PARA EL CASO DE LA DIST. DE POISSON
library(stats4) ## Cargar la liberia stats4.
x=NULL
#FUNCION DE VEROSIMILITUD
ll=function(lambda) {
n<-length(datosColas)
x<-datosColas
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda=1))
summary(est1)
datosColas = scan("colas.txt")
#usando otra libreria
library(MASS) ## loading package MASS
fitdistr(datosColas,"poisson")
#########################################################################
#METODO DE MAXIMA VEROSIMILITUD MLE
#PARA EL CASO DE LA DIST. DE POISSON
library(stats4) ## Cargar la liberia stats4.
x=NULL
#FUNCION DE VEROSIMILITUD
ll=function(lambda) {
n<-length(datosColas)
x<-datosColas
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda=4))
summary(est1)
x.norm<-rnorm(1000,4,2)
hist(x.norm)
#opci칩n 1
library(stats4) ## loading package stats4
## -log-likelihood function
#la funci칩n de verosimilitud calculada en clases
ll<-function(mu,sigma2) {
n<-1000
x<-x.norm
-(-(n/2)*log(sigma2)-(1/(2*sigma2))*(sum((x-mu)^2))-(n/2)*log(2*pi))
}
est<-mle(minuslog=ll, method = "Nelder-Mead",start=list(mu=2,sigma2=1))
summary(est)
(xpoi=rpois(1000,4.5))
library(stats4) ## Cargar la liberia stats4.
x=NULL
#FUNCIN DE VEROSIMILITUD
ll=function(lambda) {
n<-length(xpoi)
x<-xpoi
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda=2))
summary(est1)
#PARA EL CASO DE LA DIST. DE POISSON
library(stats4) ## Cargar la liberia stats4.
x=NULL
#FUNCIN DE VEROSIMILITUD
ll=function(lambda) {
n<-length(datosColas)
x<-datosColas
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda=2))
? rpois
xpoi=rpois(datosColas, 2)
m = median(datosColas)
xpoi=rpois(datosColas, m)
library(stats4) ## Cargar la liberia stats4.
x=NULL
#FUNCIN DE VEROSIMILITUD
ll=function(lambda) {
n<-length(xpoi)
x<-xpoi
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda=m))
summary(est1)
m = median(datosColas)
xpoi=rpois(datosColas, m)
library(stats4) ## Cargar la liberia stats4.
x=NULL
#FUNCIN DE VEROSIMILITUD
ll=function(lambda) {
n<-length(xpoi)
x<-xpoi
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda=2))
m = median(datosColas)
xpoi=rpois(datosColas, 2)
library(stats4) ## Cargar la liberia stats4.
x=NULL
#FUNCIN DE VEROSIMILITUD
ll=function(lambda) {
n<-length(xpoi)
x<-xpoi
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda=2))
summary(est1)
datosColas = scan("colas.txt")
library(stats4) ## Cargar la liberia stats4.
x=NULL
#FUNCIN DE VEROSIMILITUD
ll=function(lambda) {
n<-length(datosColas)
x<-datosColas
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda=2))
summary(est1)
x=NULL
#FUNCIN DE VEROSIMILITUD
ll=function(lambda) {
n<-length(datosColas)
x<-datosColas
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda=2))
summary(est1)
ppois(c(440), 2 , lower.tail=F)
qpois(0.90,2)
qpois(0.90,133)
##Andres Navarro   11-10688
##Nabil J. Marquez 11-10683
##Laboratorio 2
##Estadistica Intensivo 2016
### Metodo de Maxima Verosimilitud  #########
#Leyendo los datos
datosColas = scan("colas.txt")
# Estimar el error para lambda
#METODO DE MAXIMA VEROSIMILITUD MLE
#PARA EL CASO DE LA DIST. DE POISSON
summary(datosColas)
library(stats4) ## Cargar la libreria stats4.
x=NULL
#FUNCION DE VEROSIMILITUD
ll=function(lambda) {
n<-length(datosColas)
x<-datosColas
-(-lambda*n+sum(x)*log(lambda))
}
est1=mle(minuslog=ll, start=list(lambda=133))
summary(est1)
summary(datosColas)
? ppois
ppois(440, lambda=133)
ppois(440, lambda=2)
ppois(440, lambda=2, lower.tail=FALSE)
ppois(440, lambda=133, lower.tail=FALSE)
ppois(440, lambda=133, lower=FALSE)
ppois(440, lambda=133)
ppois(440, lambda=399, lower.tail=FALSE)
dpois(0.90,lambda=133)
dpois(120,lambda=133)
dpois(133,lambda=133)
dpois(150,lambda=133)
qpois(0.9, 133)
ppois(440, lambda=398.496, lower.tail=FALSE)
qpois(0.9, 132.832)
