x1menosx2opt2(2)
x1menosx2opt2(3)
source('C:/Users/nabil/Desktop/practica/p5.R', encoding = 'UTF-8')
source('C:/Users/nabil/Desktop/practica/p5.R', encoding = 'UTF-8')
x1menosx2opt2(3)
source('C:/Users/nabil/Desktop/practica/p3.R', encoding = 'UTF-8')
source('C:/Users/nabil/Desktop/practica/p3.R', encoding = 'UTF-8')
source('C:/Users/nabil/Desktop/practica/p3.R', encoding = 'UTF-8')
source('C:/Users/nabil/Desktop/practica/p3.R', encoding = 'UTF-8')
source('C:/Users/nabil/Desktop/practica/p3.R', encoding = 'UTF-8')
plot(speed,dist)
source('C:/Users/nabil/Desktop/practica/p3.R', encoding = 'UTF-8')
source('C:/Users/nabil/Desktop/practica/p3.R', encoding = 'UTF-8')
source('C:/Users/nabil/Desktop/practica/p3.R', encoding = 'UTF-8')
dist
speed
25*25
speed^2
source('C:/Users/nabil/Desktop/practica/p3.R', encoding = 'UTF-8')
cars$speed
speed
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
judge
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
?USJudgeRatings
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
min(rowSums(USJudgeRatings))
(rowSums(USJudgeRatings))
max(rowSums(USJudgeRatings))
(rowSums(USJudgeRatings))
max(rowSums(USJudgeRatings))
(rowSums(USJudgeRatings))
subset(USJudgeRatings)
subset(rowSums(USJudgeRatings))
subset(USJudgeRatings)
(USJudgeRatings)
(rowSums(USJudgeRatings))
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
subset(USJudgeRatings)
rowSums(USJudgeRatings)
rowSums(USJudgeRatings)[0]
rowSums(USJudgeRatings)[1]
rowSums(USJudgeRatings)[2]
which(rowSums(USJudgeRatings) == elmin)
which(rowSums(USJudgeRatings) == elmin)[0]
which(rowSums(USJudgeRatings) == elmin)[1]
which(rowSums(USJudgeRatings) == elmin).name
which(rowSums(USJudgeRatings) == elmin)
which(rowSums(USJudgeRatings) == elmin)[2]
which(rowSums(USJudgeRatings) == elmin)[1]
which(rowSums(USJudgeRatings) == elmin)
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
max(rowSums(USJudgeRatings))
rowSums(USJudgeRatings)
which(rowSums(USJudgeRatings) == max(rowSums(USJudgeRatings)))
w<-which(rowSums(USJudgeRatings) == max(rowSums(USJudgeRatings)))
w<-which(rowSums(USJudgeRatings) == max(rowSums(USJudgeRatings)))[0]
w<-which(rowSums(USJudgeRatings) == max(rowSums(USJudgeRatings)))
w<-which(rowSums(USJudgeRatings) == max(rowSums(USJudgeRatings)))
names(w)
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
summary(USJudgeRatings)
USJudgeRatings
summary(USJudgeRatings)
mean(USJudgeRatings)
summary(USJudgeRatings)
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
matrix(rownames(USJudgeRatings))
matrix(rownames(USJudgeRatings))
sort(matrix(rownames(USJudgeRatings)))
sort(matrix(rownames(USJudgeRatings)))
(USJudgeRatings)
unique(sort(matrix(rownames(USJudgeRatings))))
sort(matrix(rownames(USJudgeRatings)))
summaryBy
summaryBy()
summary
summary help
help summary()
help summary
summary(USJudgeRatings, )
summary(USJudgeRatings, mean())
summary(USJudgeRatings
tapply
tapply
tapply(USJudgeRatings)
tapply(USJudgeRatings,summary)
tapply(USJudgeRatings$2:12,summary)
tapply(USJudgeRatings2:12,summary)
tapply(USJudgeRatings$INTG,summary)
tapply(USJudgeRatings$INTG:DILG,summary)
tapply(c(USJudgeRatings$INTG) ,summary)
grp <- factor(rep(LETTERS[1:4], c(4,6,6,8)))
grp
grp <- factor(rep(names(USJudgeRatings), c(4,6,6,8)))
grp <- factor(rep(names(USJudgeRatings)), c(4,6,6,8)))
grp <- factor(rep(names(USJudgeRatings)))
grp
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
grp <- factor(rep(names(USJudgeRatings)[2:12]))
grp
df <- data.frame(group=grp, dt=data)
df <- data.frame(group=grp, dt=USJudgeRatings)
df <- data.frame(group=grp, dt=USJudgeRatings)
grp <- factor(rep(names(USJudgeRatings)))
df <- data.frame(group=grp, dt=USJudgeRatings)
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
grp <- factor(rep(names(USJudgeRatings)))
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
grp
source('C:/Users/nabil/Desktop/practica/p4.R', encoding = 'UTF-8')
grp
df <- data.frame(group=grp, dt=USJudgeRatings)
grp
df <- data.frame(group=grp, dt=USJudgeRatings)
grp
df <- data.frame(group=grp, dt=USJudgeRatings)
df <- data.frame(group=grp, dt=USJudgeRatings)
df <- data.frame(group=grp, dt=USJudgeRatings)
grp <- factor(rep(LETTERS[1:4], c(4,6,6,8)))
source('C:/Users/nabil/Desktop/Estadistica/Lab6/vicky6.R')
datos = read.table("ventas.csv", header=T)
setwd("C:/Users/nabil/Desktop/Estadistica/Lab6")
datos = read.table("ventas.csv", header=T)
View(datos)
datos = read.csv("ventas.csv", header=T)
View(datos)
datos = read.csv("ventas.csv", header=T,sep=",")
View(datos)
datos = read.csv(file="ventas.csv", header=T,sep=",")
View(datos)
datos = read.csv(file="ventas.csv", header=T,sep=";")
View(datos)
View(datos)
variables = datos[31]
variables = datos(31)
datos(31)
datos
datos[31]
datos[31]
datos[31,1]
datos[31,2]
datos[31,:]
datos[31,1:7]
datos[31,1:7]
datos[31,2:7]
datos[31,2:8]
datos[31,2:7]
variables = datos[31,2:7]
datos = datos[1:30,1:7]
View(datos)
datos = datos[1:30,1:7]
attach(datos)
names(datos)
b = names(datos)
b
b[-8]
b[-7]
b[-6]
b[-5]
b[-4]
bb
b
b[-1]
b[-7]
b[-8]
b[-6]
cor(datos)
pairs(datos)
names(datos)
mcor= cor(datos)
print(mcor)
View(mcor)
View(mcor)
View(mcor)
View(mcor)
View(mcor)
lm?
?lm
mcor= cor(datos)
m1 = lm(JOBPER ~ AG + AM + HC + IN)
m1
summary(m1)
plot(datos)
datos = read.csv("datosdoug.csv")
datos = read.csv("datosdoug.csv")
attach(datos)
correlacion = cor(datos)
attach(datos)
View(datos)
View(datos)
datos = read.csv("datosdoug.csv", header=T,sep=";")
View(datos)
attach(datos)
correlacion = cor(datos)
correlacion
plot(datos)
correlacion = cor(datos)
correlacion
plot(datos)
View(correlacion)
datos = read.csv(file="ventas.csv", header=T,sep=";")
variables = datos[31,2:7]
datos = datos[1:30,1:7]
View(datos)
datos = read.csv(file="ventas.csv", header=T,sep=";")
View(datos)
datos = read.csv("datosdoug.csv", header=T,sep=";")
View(datos)
attach(datos)
View(datos)
correlacion = cor(datos)
correlacion
plot(datos)
View(datos)
plot(datos)
datos = read.csv(file="ventas.csv", header=T,sep=";")
datos = read.csv(file="ventas.csv", header=T,sep=";")
datos = read.csv(file="ventas.csv", header=T,sep=";")
plot(datos)
plot(datos)
plot(datos)
datos = read.csv("datosdoug.csv", header=T,sep=";")
attach(datos)
correlacion = cor(datos)
correlacion
plot(datos)
modelo_o = lm(JTS ~ING+EDU+DIS+SEM+EMP)
summary(modelo_o)
qqnorm(resid(modelo_o), main = "Modelo inicial (JTS ~ING+EDU+DIS+SEM+EMP)")
qqline(resid(modelo_o))
plot(datos)
# Matriz de Correlación
mcor= cor(datos)
print(mcor)
plot(datos)
# Matriz de Correlación
mcor= cor(datos)
print(mcor)
plot(datos)
# Matriz de Correlación
mcor= cor(datos)
print(mcor)
# Laboratorio 6 de Estadística
# Hecho por: María Victoria Jorge 11-10495
#
# Ejercicio 9. Archivo 'CPU.dat'
datos = read.csv(file="ventas.csv", header=T,sep=";")
variables = datos[31,2:7]
datos = datos[1:30,1:7]
attach(datos)
names(datos)
plot(datos)
# Matriz de Correlación
mcor= cor(datos)
print(mcor)
# Modelo donde |ro| > 0.5
m1 = lm(JOBPER ~ AG + AM + HC + IN)
summary(m1)
qqnorm(resid(m1), main = "Modelo inicial (JOBPER ~ AG + AM + HC + IN)")
qqnorm(resid(m1), main = "Modelo inicial (JOBPER ~ AG + AM + HC + IN)")
qqline(resid(m1))
datos = read.csv("datosdoug.csv", header=T,sep=";")
attach(datos)
correlacion = cor(datos)
correlacion
plot(datos)
modelo_o = lm(JTS ~ING+EDU+DIS+SEM+EMP)
summary(modelo_o)
qqnorm(resid(modelo_o), main = "Modelo inicial (JTS ~ING+EDU+DIS+SEM+EMP)")
qqline(resid(modelo_o))
modelo = lm(JTS ~ING+EDU+SEM+EMP)
summary(modelo)
qqnorm(resid(modelo), main = "Modelo actualizado (JTS ~ING+EDU+SEM+EMP)")
qqline(resid(modelo))
modelo = lm(JTS ~ING+EDU+EMP)
summary(modelo)
qqnorm(resid(modelo), main = "Modelo actualizado (JTS ~ING+EDU+EMP)")
qqline(resid(modelo))
modelo = lm(JTS ~ING+EDU)
summary(modelo)
qqnorm(resid(modelo), main = "Modelo actualizado (JTS ~ING+EDU)")
qqline(resid(modelo))
predicciones = data.frame(ING=25,EDU=5)
predict(modelo, newdata = predicciones, interval = "prediction")
predicciones = data.frame(ING=25,EDU=5,DIS=7,SEM=26,EMP=3)
predict(modelo_o, newdata = predicciones, interval = "prediction")
modelo_o = lm(JTS ~ING+EDU+DIS+SEM+EMP)
summary(modelo_o)
qqnorm(resid(modelo_o), main = "Modelo inicial (JTS ~ING+EDU+DIS+SEM+EMP)")
qqline(resid(modelo_o))
modelo = lm(JTS ~ING+EDU+SEM+EMP)
summary(modelo)
qqnorm(resid(modelo), main = "Modelo actualizado (JTS ~ING+EDU+SEM+EMP)")
qqline(resid(modelo))
modelo = lm(JTS ~ING+EDU+EMP)
summary(modelo)
qqnorm(resid(modelo), main = "Modelo actualizado (JTS ~ING+EDU+EMP)")
qqline(resid(modelo))
modelo = lm(JTS ~ING+EDU)
summary(modelo)
qqnorm(resid(modelo), main = "Modelo actualizado (JTS ~ING+EDU)")
qqline(resid(modelo))
qqnorm(resid(modelo_o), main = "Modelo inicial (JTS ~ING+EDU+DIS+SEM+EMP)")
qqline(resid(modelo_o))
modelo = lm(JTS ~ING+EDU+SEM+EMP)
summary(modelo)
qqnorm(resid(modelo), main = "Modelo actualizado (JTS ~ING+EDU+SEM+EMP)")
qqline(resid(modelo))
modelo = lm(JTS ~ING+EDU+EMP)
summary(modelo)
qqnorm(resid(modelo), main = "Modelo actualizado (JTS ~ING+EDU+EMP)")
qqline(resid(modelo))
modelo = lm(JTS ~ING+EDU)
summary(modelo)
qqnorm(resid(modelo), main = "Modelo actualizado (JTS ~ING+EDU)")
qqline(resid(modelo))
predicciones = data.frame(ING=25,EDU=5)
predict(modelo, newdata = predicciones, interval = "prediction")
modelo = lm(JTS ~ING+EDU+EMP)
summary(modelo)
qqnorm(resid(modelo), main = "Modelo actualizado (JTS ~ING+EDU+EMP)")
qqline(resid(modelo))
modelo = lm(JTS ~ING+EDU)
summary(modelo)
qqnorm(resid(modelo), main = "Modelo actualizado (JTS ~ING+EDU)")
qqline(resid(modelo))
source('C:/Users/nabil/Desktop/Estadistica/Lab6/lab6.R')
summary(m1)
summary(m1)
# Ejercicio 9. Archivo 'CPU.dat'
datos = read.csv(file="ventas.csv", header=T,sep=";")
variables = datos[31,2:7]
datos = datos[1:30,1:7]
attach(datos)
names(datos)
plot(datos)
# Matriz de Correlación
mcor= cor(datos)
print(mcor)
# Modelo donde |ro| > 0.5
m1 = lm(JOBPER ~ AG + AM + HC + IN)
summary(m1)
qqnorm(resid(m1), main = "Modelo inicial (JOBPER ~ AG + AM + HC + IN)")
qqline(resid(m1))
attach(datos)
names(datos)
plot(datos)
# Matriz de Correlación
mcor= cor(datos)
print(mcor)
# Modelo donde |ro| > 0.5
m1 = lm(JOBPER ~ AG + AM + HC + IN)
summary(m1)
qqnorm(resid(m1), main = "Modelo inicial (JOBPER ~ AG + AM + HC + IN)")
qqline(resid(m1))
par(mfrow = c(1, 2))
View(datos)
View(datos)
plot(AG, fitted.values(m1), sub="modelo 1",type="l")
points(AG,JOBPER)
par(mfrow = c(1, 4))
plot(AG, fitted.values(m1), sub="modelo 1",type="l")
points(AG,JOBPER)
plot(AM, fitted.values(m1), sub="modelo 1",type="l")
points(AM,JOBPER)
plot(IN, fitted.values(m1), sub="modelo 1",type="l")
points(IN,JOBPER)
par(mfrow = c(1, 4))
plot(AG, fitted.values(m1), sub="modelo 1",type="l")
qqnorm(resid(m1), main = "Modelo inicial (JOBPER ~ AG + AM + HC + IN)")
qqline(resid(m1))
plot(AG, fitted.values(m1), sub="modelo 1",type="l")
# Gráficos para ver cómo se ajustó el modelo
par(mfrow = c(2, 4))
qqnorm(resid(m1), main = "Modelo inicial (JOBPER ~ AG + AM + HC + IN)")
qqline(resid(m1))
?par
layout(matrix(c(1,2,3,4,4,5), 2, 3, byrow = TRUE))
hist(as.matrix(1:10))
hist(as.matrix(1:10))
hist(as.matrix(1:10))
hist(as.matrix(1:10))
hist(as.matrix(1:10))
layout(matrix(c(1,1,2,3,4,5), 2, 4, byrow = TRUE))
hist(as.matrix(1:10))
hist(as.matrix(1:10))
hist(as.matrix(1:10))
hist(as.matrix(1:10))
hist(as.matrix(1:10))
layout(matrix(c(1,1,2,3,4,5), 2, 4, byrow = TRUE))
layout(matrix(c(1,1,1,1,2,3,4,5), 2, 4, byrow = TRUE))
hist(as.matrix(1:10))
hist(as.matrix(1:10))
hist(as.matrix(1:10))
hist(as.matrix(1:10))
hist(as.matrix(1:10))
layout(matrix(c(1,1,1,1,2,3,4,5), 2, 4, byrow = TRUE))
qqnorm(resid(m1), main = "Modelo inicial (JOBPER ~ AG + AM + HC + IN)")
qqline(resid(m1))
plot(AG, fitted.values(m1), sub="modelo 1",type="l")
points(AG,JOBPER)
plot(AM, fitted.values(m1), sub="modelo 1",type="l")
points(AM,JOBPER)
plot(HC, fitted.values(m1), sub="modelo 1",type="l")
points(HC,JOBPER)
plot(IN, fitted.values(m1), sub="modelo 1",type="l")
points(IN,JOBPER)
attach(datos)
names(datos)
plot(datos)
# Matriz de Correlación
mcor= cor(datos)
print(mcor)
# Modelo donde |ro| > 0.5
m1 = lm(JOBPER ~ AG + AM + HC + IN)
summary(m1)
m2 = lm(JOBPER ~ AG + AM + IN)
summary(m2)
m2 = lm(JOBPER ~ AG + AM + IN)
summary(m2)
# Gráficos para ver cómo se ajustó el modelo
layout(matrix(c(1,1,1,1,2,3,4,5), 2, 4, byrow = TRUE))
qqnorm(resid(m2), main = "Modelo 2 (JOBPER ~ AG + AM + HC + IN)")
qqline(resid(m2))
plot(AG, fitted.values(m2), sub="modelo 2",type="l")
points(AG,JOBPER)
plot(AM, fitted.values(m2), sub="modelo 2",type="l")
points(AM,JOBPER)
plot(IN, fitted.values(m2), sub="modelo 2",type="l")
points(IN,JOBPER)
layout(matrix(c(1,1,2,3,4,5), 2, 3, byrow = TRUE))
qqnorm(resid(m2), main = "Modelo 2 (JOBPER ~ AG + AM + IN)")
qqline(resid(m2))
plot(AG, fitted.values(m2), sub="modelo 2",type="l")
points(AG,JOBPER)
layout(matrix(c(1,1,1,2,3,4), 2, 3, byrow = TRUE))
qqnorm(resid(m2), main = "Modelo 2 (JOBPER ~ AG + AM + IN)")
qqline(resid(m2))
plot(AG, fitted.values(m2), sub="modelo 2",type="l")
points(AG,JOBPER)
plot(AM, fitted.values(m2), sub="modelo 2",type="l")
points(AM,JOBPER)
plot(IN, fitted.values(m2), sub="modelo 2",type="l")
points(IN,JOBPER)
m3 = lm(JOBPER ~ AM + IN)
summary(m3)
m3 = lm(JOBPER ~ AM + IN)
summary(m3)
# Gráficos para ver cómo se ajustó el modelo
layout(matrix(c(1,1,1,2,3,4), 2, 3, byrow = TRUE))
qqnorm(resid(m3), main = "Modelo 3 (JOBPER ~ AM + IN)")
qqline(resid(m3))
plot(AM, fitted.values(m3), sub="modelo 3",type="l")
plot(HC, fitted.values(m1), sub="modelo 1",type="l")
points(HC,JOBPER)
# Gráficos para ver cómo se ajustó el modelo
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
qqnorm(resid(m3), main = "Modelo 3 (JOBPER ~ AM + IN)")
qqline(resid(m3))
plot(AM, fitted.values(m3), sub="modelo 3",type="l")
points(AM,JOBPER)
plot(IN, fitted.values(m3), sub="modelo 3",type="l")
points(IN,JOBPER)
variables
variables(AG)
variables[AG]
variables["AG"]
variables["AG"]*2
x=variables["AG"]*2
x
predi = data.frame(AG=variables["AG"],
EN=variables["EN"],
AM=variables["AM"],
HC=variables["HC"],
SI=variables["SI"],
IN=variables["IN"])
predict(m1, newdata = predi, interval = "prediction")
predf = data.frame(AM=variables["AM"],
IN=variables["IN"])
predict(m3, newdata = predf, interval = "prediction")
variables["AG"]
View(variables)
View(variables)
59.51853-34.04716 > 60.33665 - 34.29835
(59.51853-34.04716) > (60.33665 - 34.29835)
?predict
(59.51853-34.04716)
(60.33665 - 34.29835)
# Modelo donde |ro| > 0.5
m1 = lm(JOBPER ~ AG + AM + HC + IN)
summary(m1)
m2 = lm(JOBPER ~ AG + AM + IN)
summary(m2)
m3 = lm(JOBPER ~ AM + IN)
summary(m3)
m3 = lm(JOBPER ~ AM + IN)
summary(m3)
summary(m1)
summary(m3)
summary(m1)
p1 <- predict(m1, newdata = predi, interval = "prediction")
p2 <- predict(m3, newdata = predf, interval = "prediction")
p1
p2
p1.fit
predict.fit
